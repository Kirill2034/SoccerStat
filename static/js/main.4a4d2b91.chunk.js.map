{"version":3,"sources":["common/Routes.js","api/config.js","components/LeagueList/LeagueList.js","components/Pagination/Pagination.js","components/ScreenListHeader/ScreenListHeader.js","screens/Leagues/Leagues.js","components/MatchList/MatchList.js","hooks/useQuery.js","screens/League/League.js","components/TeamList/TeamList.js","screens/Teams/Teams.js","screens/Team/Team.js","App.js","index.js","components/Pagination/Pagingation.module.css","components/TeamList/TeamList.module.css"],"names":["Routes","API_CLIENT","axios","create","headers","process","interceptors","response","use","error","status","toast","Promise","reject","Leagues","leagues","List","map","league","i","ListItem","button","component","NavLink","to","generatePath","leagueId","id","ListItemText","primary","name","Pagination","perPage","total","paginate","pageNumbers","Math","ceil","push","Box","display","flexWrap","number","className","styles","buttonWrapper","Button","variant","color","onClick","routes","ScreenListHeader","location","useLocation","value","indexOf","pathname","AppBar","position","Tabs","Tab","label","useState","setLeagues","loading","setLoading","carrentPage","setCarrentPage","leaguesPerPage","useEffect","a","get","data","competitions","getLeagues","lastLeaguesIndex","firstLeaguesIndx","currentLeagues","slice","Container","LeagueList","length","pageNumber","MatchList","matches","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","match","homeTeam","awayTeam","format","Date","utcDate","useQuery","URLSearchParams","search","League","history","useHistory","useParams","query","setMatches","dateFrom","dateTo","selectedDateFrom","selectedDateTo","getLeagueMatches","qs","stringify","pushToHistory","from","mt","mb","mr","selected","onChange","date","placeholderText","TeamList","teams","team","teamId","src","crestUrl","alt","image","Teams","setTeams","teamsPerPage","getTeams","lastTeamsIndex","firstTeamsIndex","currentTeams","Team","getTeamMatches","App","path","exact","ReactDOM","render","CssBaseline","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4a4d2b91.chunk.js","sourcesContent":["const Routes = {\n  LEAGUES: \"/leagues\",\n  LEAGUE: \"/leagues/:leagueId\",\n  TEAMS: \"/teams\",\n  TEAM: \"/teams/:teamId\",\n};\n\nexport { Routes };\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\nconst API_CLIENT = axios.create({\n  headers: { \"X-Auth-Token\": process.env.REACT_APP_AUTH_TOKEN },\n});\n\nAPI_CLIENT.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    if (error.response.status === 403) {\n      toast.error(\"Данные недоступны\");\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport { API_CLIENT };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Routes } from \"../../common/Routes\";\nimport { NavLink, generatePath } from \"react-router-dom\";\n\nfunction Leagues({ leagues }) {\n  return (\n    <List>\n      {leagues.map((league, i) => (\n        <ListItem\n          key={i}\n          button\n          component={NavLink}\n          to={generatePath(Routes.LEAGUE, { leagueId: league.id })}\n        >\n          <ListItemText primary={league.name} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default Leagues;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport styles from \"./Pagingation.module.css\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction Pagination({ perPage, total, paginate }) {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(total / perPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\">\n      {pageNumbers.map((number) => (\n        <div key={number} className={styles.buttonWrapper}>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={() => paginate(number)}\n          >\n            {number}\n          </Button>\n        </div>\n      ))}\n    </Box>\n  );\n}\n\nexport default Pagination;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { Routes } from \"../../common/Routes\";\n\nconst routes = [Routes.LEAGUES, Routes.TEAMS];\n\nconst ScreenListHeader = () => {\n  const location = useLocation();\n\n  const value = routes.indexOf(location.pathname);\n\n  return (\n    <AppBar position=\"static\">\n      <Tabs value={value}>\n        <Tab label=\"Лиги\" component={NavLink} to={Routes.LEAGUES} />\n        <Tab label=\"Команды\" component={NavLink} to={Routes.TEAMS} />\n      </Tabs>\n    </AppBar>\n  );\n};\n\nexport default ScreenListHeader;\n","import React, { useState, useEffect } from \"react\";\nimport { API_CLIENT } from \"../../api/config\";\nimport { LeagueList } from \"../../components/LeagueList\";\nimport { Pagination } from \"../../components/Pagination\";\nimport { ScreenListHeader } from \"../../components/ScreenListHeader\";\nimport { toast } from \"react-toastify\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Leagues() {\n  const [leagues, setLeagues] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [carrentPage, setCarrentPage] = useState(1);\n  const [leaguesPerPage] = useState(10);\n\n  useEffect(() => {\n    const getLeagues = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await API_CLIENT.get(\n          \"https://api.football-data.org/v2/competitions\"\n        );\n        setLeagues(data.competitions);\n      } catch (e) {\n        toast.error(\"Ошибка при загрузке команд\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getLeagues();\n  }, []);\n\n  const lastLeaguesIndex = carrentPage * leaguesPerPage;\n  const firstLeaguesIndx = lastLeaguesIndex - leaguesPerPage;\n  const currentLeagues = leagues.slice(firstLeaguesIndx, lastLeaguesIndex);\n\n  const paginate = (pageNumber) => setCarrentPage(pageNumber);\n\n  return (\n    <div>\n      <ScreenListHeader />\n\n      <Container>\n        <h1>Страница Лиг</h1>\n\n        {loading ? (\n          <h2>Загрузка...</h2>\n        ) : (\n          <LeagueList leagues={currentLeagues} />\n        )}\n\n        <Pagination\n          perPage={leaguesPerPage}\n          total={leagues.length}\n          paginate={paginate}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default Leagues;\n","import React from \"react\";\nimport format from \"date-fns/format\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction MatchList({ matches }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Домашняя команда</TableCell>\n            <TableCell>Гостевая команда</TableCell>\n            <TableCell align=\"right\">Дата</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {matches.map((match) => (\n            <TableRow key={match.id}>\n              <TableCell>{match.homeTeam.name}</TableCell>\n              <TableCell>{match.awayTeam.name}</TableCell>\n              <TableCell align=\"right\">\n                {format(new Date(match.utcDate), \"yyyy-MM-dd\")}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default MatchList;\n","import { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport { useQuery };\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, generatePath } from \"react-router-dom\";\nimport { API_CLIENT } from \"../../api/config\";\nimport { MatchList } from \"../../components/MatchList\";\nimport DatePicker from \"react-datepicker\";\nimport { Routes } from \"../../common/Routes\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport qs from \"query-string\";\nimport format from \"date-fns/format\";\nimport { toast } from \"react-toastify\";\nimport { ScreenListHeader } from \"../../components/ScreenListHeader\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction League() {\n  const history = useHistory();\n  const { leagueId } = useParams();\n  const query = useQuery();\n\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const dateFrom = query.get(\"dateFrom\");\n  const dateTo = query.get(\"dateTo\");\n\n  const selectedDateFrom = dateFrom ? new Date(dateFrom) : null;\n  const selectedDateTo = dateTo ? new Date(dateTo) : null;\n\n  useEffect(() => {\n    const getLeagueMatches = async () => {\n      setLoading(true);\n\n      try {\n        const search = qs.stringify({ dateFrom, dateTo });\n\n        const { data } = await API_CLIENT.get(\n          `https://api.football-data.org/v2/competitions/${leagueId}/matches?${search}`\n        );\n\n        setMatches(data.matches);\n      } catch (e) {\n        toast.error(\"Ошибка при загрузке матчей лиги\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if ((dateFrom && !dateTo) || (!dateFrom && dateTo)) {\n      toast.error(\"Пожалуйста, выберите обе даты!\");\n      return;\n    }\n\n    getLeagueMatches();\n  }, [leagueId, dateFrom, dateTo]);\n\n  const onSetDateFrom = (date) => {\n    if (selectedDateTo && date > selectedDateTo) {\n      toast.error(\"Дата начала не может быть больше даты окончания!\");\n      return;\n    }\n\n    pushToHistory({ from: format(date, \"yyyy-MM-dd\"), to: dateTo });\n  };\n\n  const onSetDateTo = (date) => {\n    if (selectedDateFrom && date < selectedDateFrom) {\n      toast.error(\"Дата окончания не может быть меньше даты начала!\");\n      return;\n    }\n\n    pushToHistory({ from: dateFrom, to: format(date, \"yyyy-MM-dd\") });\n  };\n\n  const pushToHistory = ({ from, to }) => {\n    const search = qs.stringify({ dateFrom: from, dateTo: to });\n\n    history.push({\n      pathname: generatePath(Routes.LEAGUE, { leagueId }),\n      search,\n    });\n  };\n\n  return (\n    <div>\n      <ScreenListHeader />\n\n      <Container>\n        <h1>Страница Лиги</h1>\n\n        <Box mt={2} mb={2} display=\"flex\">\n          <Box mr={2}>\n            <DatePicker\n              selected={selectedDateFrom}\n              onChange={onSetDateFrom}\n              placeholderText=\"Выберите дату начала\"\n            />\n          </Box>\n\n          <Box>\n            <DatePicker\n              selected={selectedDateTo}\n              onChange={onSetDateTo}\n              placeholderText=\"Выберите дату окончания\"\n            />\n          </Box>\n        </Box>\n\n        {loading ? <h2>Загрузка...</h2> : <MatchList matches={matches} />}\n      </Container>\n    </div>\n  );\n}\n\nexport default League;\n","import React from \"react\";\nimport { NavLink, generatePath } from \"react-router-dom\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { Routes } from \"../../common/Routes\";\nimport styles from \"./TeamList.module.css\";\n\nfunction TeamList({ teams }) {\n  return (\n    <List>\n      {teams.map((team, i) => (\n        <ListItem\n          key={i}\n          button\n          component={NavLink}\n          to={generatePath(Routes.TEAM, { teamId: team.id })}\n        >\n          <img src={team.crestUrl} alt=\"Teams page\" className={styles.image} />\n          <ListItemText primary={team.name} />\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n\nexport default TeamList;\n","import React, { useEffect, useState } from \"react\";\nimport { API_CLIENT } from \"../../api/config\";\nimport { TeamList } from \"../../components/TeamList\";\nimport { Pagination } from \"../../components/Pagination\";\nimport { toast } from \"react-toastify\";\nimport { ScreenListHeader } from \"../../components/ScreenListHeader\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Teams() {\n  const [teams, setTeams] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [carrentPage, setCarrentPage] = useState(1);\n  const [teamsPerPage] = useState(10);\n\n  useEffect(() => {\n    const getTeams = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await API_CLIENT.get(\n          \"https://api.football-data.org/v2/teams\"\n        );\n\n        setTeams(data.teams);\n      } catch (e) {\n        toast.error(\"Ошибка при загрузке команд\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getTeams();\n  }, []);\n\n  const lastTeamsIndex = carrentPage * teamsPerPage;\n  const firstTeamsIndex = lastTeamsIndex - teamsPerPage;\n  const currentTeams = teams.slice(firstTeamsIndex, lastTeamsIndex);\n\n  const paginate = (pageNumber) => setCarrentPage(pageNumber);\n\n  return (\n    <div>\n      <ScreenListHeader />\n\n      <Container>\n        <h1>Страница Команд</h1>\n\n        {loading ? <h2>Загрузка...</h2> : <TeamList teams={currentTeams} />}\n\n        <Pagination\n          perPage={teamsPerPage}\n          total={teams.length}\n          paginate={paginate}\n        />\n      </Container>\n    </div>\n  );\n}\n\nexport default Teams;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory, generatePath } from \"react-router-dom\";\nimport { API_CLIENT } from \"../../api/config\";\nimport { MatchList } from \"../../components/MatchList\";\nimport DatePicker from \"react-datepicker\";\nimport { Routes } from \"../../common/Routes\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport qs from \"query-string\";\nimport format from \"date-fns/format\";\nimport { toast } from \"react-toastify\";\nimport { ScreenListHeader } from \"../../components/ScreenListHeader\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\n\nfunction Team() {\n  const history = useHistory();\n  const { teamId } = useParams();\n  const query = useQuery();\n\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const dateFrom = query.get(\"dateFrom\");\n  const dateTo = query.get(\"dateTo\");\n\n  const selectedDateFrom = dateFrom ? new Date(dateFrom) : null;\n  const selectedDateTo = dateTo ? new Date(dateTo) : null;\n\n  useEffect(() => {\n    const getTeamMatches = async () => {\n      setLoading(true);\n\n      try {\n        const search = qs.stringify({ dateFrom, dateTo });\n\n        const { data } = await API_CLIENT.get(\n          `https://api.football-data.org/v2/teams/${teamId}/matches?${search}`\n        );\n\n        setMatches(data.matches);\n      } catch (e) {\n        toast.error(\"Ошибка при загрузке матчей команды\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if ((dateFrom && !dateTo) || (!dateFrom && dateTo)) {\n      toast.error(\"Пожалуйста, выберите обе даты!\");\n      return;\n    }\n\n    getTeamMatches();\n  }, [teamId, dateFrom, dateTo]);\n\n  const onSetDateFrom = (date) => {\n    if (selectedDateTo && date > selectedDateTo) {\n      toast.error(\"Дата начала не может быть больше даты окончания!\");\n      return;\n    }\n\n    pushToHistory({ from: format(date, \"yyyy-MM-dd\"), to: dateTo });\n  };\n\n  const onSetDateTo = (date) => {\n    if (selectedDateFrom && date < selectedDateFrom) {\n      toast.error(\"Дата окончания не может быть меньше даты начала!\");\n      return;\n    }\n\n    pushToHistory({ from: dateFrom, to: format(date, \"yyyy-MM-dd\") });\n  };\n\n  const pushToHistory = ({ from, to }) => {\n    const search = qs.stringify({ dateFrom: from, dateTo: to });\n\n    history.push({ pathname: generatePath(Routes.TEAM, { teamId }), search });\n  };\n\n  return (\n    <div>\n      <ScreenListHeader />\n      <Container>\n        <h1>Страница Команды</h1>\n\n        <Box mt={2} mb={2} display=\"flex\">\n          <Box mr={2}>\n            <DatePicker\n              selected={selectedDateFrom}\n              onChange={onSetDateFrom}\n              placeholderText=\"Выберите дату начала\"\n            />\n          </Box>\n\n          <Box>\n            <DatePicker\n              selected={selectedDateTo}\n              onChange={onSetDateTo}\n              placeholderText=\"Выберите дату окончания\"\n            />\n          </Box>\n        </Box>\n\n        {loading ? <h2>Загрузка...</h2> : <MatchList matches={matches} />}\n      </Container>\n    </div>\n  );\n}\n\nexport default Team;\n","import \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { Routes } from \"./common/Routes\";\nimport { Leagues } from \"./screens/Leagues\";\nimport { League } from \"./screens/League\";\nimport { Teams } from \"./screens/Teams\";\nimport { Team } from \"./screens/Team\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path={Routes.LEAGUES} component={Leagues} exact={true} />\n      <Route path={Routes.LEAGUE} component={League} />\n\n      <Route path={Routes.TEAMS} component={Teams} exact={true} />\n      <Route path={Routes.TEAM} component={Team} />\n\n      <Redirect to={Routes.LEAGUES} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <CssBaseline />\n    <App />\n    <ToastContainer />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"Pagingation_buttonWrapper__mqL45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"TeamList_image__1DVqT\"};"],"sourceRoot":""}